(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{399:function(v,_,e){"use strict";e.r(_);var t=e(10),c=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("前置知识点:")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("DOMContentLoaded")]),v._v(" 在初始的 "),e("code",[v._v("HTML")]),v._v(" 完全加载和解析完成之后触发，无需等待样式表、图像、子框架（"),e("code",[v._v("iframe")]),v._v("）的加载")]),v._v(" "),e("li",[e("code",[v._v("load")]),v._v(" 在页面资源完全被加载解析完成之后触发")])]),v._v(" "),e("h2",{attrs:{id:"sync-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync-script"}},[v._v("#")]),v._v(" sync script")]),v._v(" "),e("p",[v._v("浏览器在解析 "),e("code",[v._v("HTML")]),v._v(" 时，如果遇到 "),e("code",[v._v("script")]),v._v(" 标签，则会暂停解析，发起一个网络请求获取这个脚本，并解析执行这个脚本。")]),v._v(" "),e("p",[v._v("也就是说 "),e("code",[v._v("script")]),v._v(" 的下载和执行会阻塞页面渲染，"),e("code",[v._v("script")]),v._v(" 中的脚本只能访问已经解析的 "),e("code",[v._v("DOM")]),v._v("。")]),v._v(" "),e("p",[v._v("这里可以理解为普通的 "),e("code",[v._v("script")]),v._v(" 是同步脚本，接下来要讲的是延迟脚本和异步脚本。")]),v._v(" "),e("h2",{attrs:{id:"defer-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defer-script"}},[v._v("#")]),v._v(" defer script")]),v._v(" "),e("p",[v._v("当浏览器解析到一个延迟脚本时，浏览器会做如下处理：")]),v._v(" "),e("ol",[e("li",[v._v("如果是内敛脚本（即没有 "),e("code",[v._v("src")]),v._v(" 值），则会忽略 "),e("code",[v._v("defer")]),v._v("，按照正常流程去解析执行这个脚本")]),v._v(" "),e("li",[v._v("否则浏览器会请求这个脚本，并且不足塞 "),e("code",[v._v("HTML")]),v._v(" 的解析")]),v._v(" "),e("li",[v._v("下载后，在 "),e("code",[v._v("DOM")]),v._v(" 解析完成后，"),e("code",[v._v("DOMContentLoaded")]),v._v(" 之前去执行它")]),v._v(" "),e("li",[v._v("如果存在多个带有 defer 的脚本，会按声明的顺序去执行")])]),v._v(" "),e("p",[v._v("延迟脚本具有这几个特点：")]),v._v(" "),e("ol",[e("li",[v._v("不足塞 "),e("code",[v._v("HTML")]),v._v(" 解析")]),v._v(" "),e("li",[v._v("在 "),e("code",[v._v("HTML")]),v._v(" 解析完成后执行，执行后再触发 "),e("code",[v._v("DOMContentLoaded")]),v._v(" 事件")]),v._v(" "),e("li",[v._v("多个 "),e("code",[v._v("defer script")]),v._v(" 之间按声明顺序执行")]),v._v(" "),e("li",[v._v("没有 "),e("code",[v._v("src")]),v._v(" 的 "),e("code",[v._v("defer script")]),v._v(" 会忽略 "),e("code",[v._v("defer")])])]),v._v(" "),e("h2",{attrs:{id:"async-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async-script"}},[v._v("#")]),v._v(" async script")]),v._v(" "),e("p",[v._v("当浏览器解析到一个异步脚本时，浏览器会做如下处理：")]),v._v(" "),e("ol",[e("li",[v._v("异步加载这个脚本，并且不足塞 "),e("code",[v._v("HTML")]),v._v(" 解析")]),v._v(" "),e("li",[v._v("下载完成则执行，执行可能在 "),e("code",[v._v("DOMContentLoaded")]),v._v(" 之前，也可能在之后，取决于脚本的下载完成的时间")]),v._v(" "),e("li",[v._v("多个 "),e("code",[v._v("async")]),v._v(" 脚本之间不会相互等待，即加载完则执行")])]),v._v(" "),e("p",[v._v("异步脚本具有以下几个特点：")]),v._v(" "),e("ol",[e("li",[v._v("不足塞 "),e("code",[v._v("HTML")]),v._v(" 解析")]),v._v(" "),e("li",[v._v("下载完成后执行，没有其他限制")])]),v._v(" "),e("h2",{attrs:{id:"dynamic-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-script"}},[v._v("#")]),v._v(" dynamic script")]),v._v(" "),e("p",[v._v("动态创建的脚本默认具备异步脚本的特点，即 "),e("code",[v._v("script.async")]),v._v(" 默认为 "),e("code",[v._v("true")]),v._v("，所以它默认也是异步加载，加载完就执行。")]),v._v(" "),e("p",[v._v("动态创建的 "),e("code",[v._v("script")]),v._v("，也可以设置 "),e("code",[v._v("script.async = false")]),v._v("，脚本将恢复至按创建的顺序去执行")]),v._v(" "),e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[v._v("#")]),v._v(" 使用")]),v._v(" "),e("p",[v._v("在实际使用中，"),e("code",[v._v("defer")]),v._v(" 应该用在那些需要整个 DOM 并且依赖声明顺序的脚本上，"),e("code",[v._v("async")]),v._v(" 应该用在那些独立的脚本上，比如广告、计数脚本，它们之间没有依赖关系。")]),v._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://javascript.info/script-async-defer",target:"_blank",rel:"noopener noreferrer"}},[v._v("script-async-defer"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=c.exports}}]);